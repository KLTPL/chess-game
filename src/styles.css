@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&display=swap');

*, *::after, *::before {
  box-sizing: border-box;
  font-family: 'Poppins', sans-serif;
}

:root {
  background-color: hsl(216, 7%, 14%);
  color: hsl(0, 0%, 0%);
  font-size: clamp(10px,3vw, 20px);
  --fieldColor1: hsl(0, 0%, 100%);
  --fieldColor2: hsl(189, 98%, 24%);
  --fieldColor2-b: hsla(189, 98%, 30%);
  --fieldColor2-d: hsla(189, 98%, 20%);
  --fieldBoxShadow: 0 0 10px rgba(0, 0, 0, 0.5);
  --arrowBgColor: hsla(16, 100%, 50%, 0.9);
  --popupColor: hsl(60, 56%, 91%);
  --popupBoxShadow: 0 5px 15px hsla(0, 0%, 0%, 0.904);
  --possMovePlainCol: rgba(0, 0, 0, 0.7); 
  --box-shadow-field-under-piece:
    0 0 10px 0 hsla(173, 26%, 18%, 0.582),
    inset 0 0 0 5px hsl(172, 100%, 26%);

  /* each set in a script*/
  --pieceSize: 100%; 
  --pieceMoveTouchSize: 100%;
  --fieldLabelFontSize: 1rem;
}

body {
  margin: 0;
  padding: 0;
}

.container {
  height: 100vh;
  position: relative;
  overflow: hidden;
}

.board-container {
  --translateX: -50%;
  --translateY: -50%;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(var(--translateX), var(--translateY));
  box-shadow: 0 0 10px hsla(0, 0%, 0%, 0.596);
  aspect-ratio: 1 / 1;
  width: var(--customWidth);  /* set in script*/
}

.board-container-default-width {
  width: 95vw;
}

@media (min-width: 600px) {
  .board-container-default-width {
    width: clamp(300px, 60%, 750px);
  }
}

.board-fields-container {
  display: grid;
  grid-template-columns: repeat(8, 1fr);
  grid-template-rows: repeat(8, 1fr);
}

.board-fields-container, .board-pieces-container {
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
}

.buttons-container {
  width: 100%;
  min-height: 2rem;
  position: absolute;
  top: 101%;
  display: flex;
  justify-content: center;
  gap: 15px;
}

.buttons-container > button {
  background-color: var(--fieldColor2);
  color: var(--fieldColor1);
  padding: .75rem 1rem;
  font-size: 1rem;
  font-weight: 600;
  border: 1px solid black;
  cursor: pointer;
  box-shadow: 0 0 5px hsla(0, 0%, 0%, 0.596);
}

.buttons-container > button:not(.arrow-button) {
  border-radius: 10%;
}

.buttons-container > button:active {
  background-color: var(--fieldColor2-d) !important;
}

.arrow-button {
  width: 3rem;
  border-radius: 50%;
  aspect-ratio: 1 / 1;
}

@media (hover: hover) { /* so the button doesn't stay 'hovered' on mobile */
  .buttons-container > button:hover{
    background-color: var(--fieldColor2-b);
  }
}

.field {
  box-shadow: var(--fieldBoxShadow);
  position: relative;
}

.field1 {
  background-color: var(--fieldColor1);
}

.field2 {
  background-color: var(--fieldColor2);
}

.field-label {
  position: absolute;
  font-size: var(--fieldLabelFontSize);
  color: black;
  display: grid;
  place-content: center;
  pointer-events: none;
  -webkit-user-select: none; /* Safari */
  -ms-user-select: none; /* IE 10 and IE 11 */
  user-select: none; /* Standard syntax */
}

.field-label-field1 {
  color: var(--fieldColor2);
}

.field-label-field2 {
  color: var(--fieldColor1);
}

.field-label-number {
  left: 5%;
  top: 5%;
}

.field-label-letter {
  right: 5%;
  bottom: 5%;
}

.piece {
  --transitionDuration: 0; /* set in script*/
  position: absolute;
  width: var(--pieceSize);
  height: var(--pieceSize);
  background-size: 100%;
  background-position: center;
  transition: all var(--transitionDuration) ease-in;
  z-index: 1;
} 

.piece.grab {
  cursor: grab;
}

#move-mouse {
  cursor: grabbing;
  z-index: 10;
}

#move-touch {
  width: var(--pieceMoveTouchSize);
  height: var(--pieceMoveTouchSize);
  z-index: 10;
  position: absolute;
}

.field-piece-selected-from {
  width: 10%;
  height: 10%;
  background-color: black;
  border-radius: 50%;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.field-heighlighted-under-moving-piece {
  position: absolute;
  width: 100%;
  height: 100%;
  box-shadow: var(--box-shadow-field-under-piece);
}

.field-king-check::before {
  content: "";
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  width: 80%;
  height: 80%;
  border-radius: 50%;
  position: absolute;
  background: rgb(255,0,0);
  background: radial-gradient(circle, rgba(255,0,0,0.8239670868347339) 0%, rgba(255,0,0,0.7819502801120448) 31%, rgba(0,0,0,0) 100%);
}

.highlighted-field {
  background-color: hsla(0, 100%, 50%, 0.9);
}

.poss-move {background-color: unset;} /* used only in spript to delete elements */

.poss-move-plain {
  position: absolute;
  left: 50%;
  top: 50%;
  border-radius: 50%;
  width: 33%;
  height: 33%;
  background-color: var(--possMovePlainCol);
  transform: translate(-50%, -50%);
}

.poss-move-capture {
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  z-index: 10;
}

.poss-move-capture::before,
.poss-move-capture::after {
  --rotate: ;
  content: "";
  position: absolute;
  left: 50%;
  top: 50%;
  width: calc(40%*1.41421356237); /* diagonal_length = box_width*sqrt(2) */
  height: 5px;
  border-radius: 27%;
  background-color: rgb(2, 165, 2);
  transform: translate(-50%, -50%) rotate(var(--rotate));
}

.poss-move-capture::before {
  --rotate: 45deg;
}

.poss-move-capture::after {
  --rotate: -45deg;
}

.move-classification {
  --src: url(./images/move-brilliant.png);
  position: absolute;
  width: 40%;
  height: 40%;
  top: -10%;
  left: -10%;
  background-image: var(--src);
  background-size: 100%;
  z-index: 10;
}

.move-classification-brilliant {
  --src: url(./images/move-brilliant.png);
}

.move-classification-blunder {
  --src: url(./images/move-blunder.png);
}


.row-col-highlight {
  width: 100%;
  height: 100%;
  position: absolute;
  background-color: hsla(143, 100%, 26%, 0.356);
}

.arrow-container {
  pointer-events: none;
  --rotationDeg: ; /* set in a script*/
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%) rotate(var(--rotationDeg));
  z-index: 10;
}

.arrow-head {
  --headHeight: ; /* set in a script*/
  position: absolute;
  left: var(--headHeight);
  bottom: 50%;
  transform: translateY(50%);
  overflow: hidden;
}

.arrow-tail {
  --halfOfFieldSize: ;  /* set in a script*/
  background-color: var(--arrowBgColor);
  position: absolute;
  bottom: 50%;
  left: var(--halfOfFieldSize);
  transform: translateY(50%);
}

.arrow-head::after {
  content: "";
  height: 95%;
  width: 95%;
  position: absolute;
  background-color: var(--arrowBgColor);
  left: -75%;
  /* left: -65%; */
  bottom: 50%;
  transform: translateY(50%) rotate(45deg);
}

.promote-popup {
  box-sizing: content-box;
  --widthOfFiveFields: ; /* set in a script*/
  --widthOfThreeFields: ; /* set in a script*/
  --quarterOfField: ; /* set in a script*/
  width: 62.5%;  /* 5/8 */
  height: 37.5%; /* 3/8 */
  padding-inline: 5%; /* 0.25/8 */
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  background-color: var(--popupColor);
  display: flex;
  align-items: center;
  justify-content: space-between;
  box-shadow: var(--popupBoxShadow);
  border: 3px solid black;
  border-radius: 1%;
  z-index: 2;
}

.promote-popup > div {
  width: 20%; /* exacly 1 field size */
  height: calc(100% / 3); /* exacly 1 field size */
  box-shadow: var(--fieldBoxShadow);
}

.promote-popup > div:hover {
  box-shadow: var(--box-shadow-field-under-piece);
}

.promote-option {
  width: 100%;
  height: 100%;
  cursor: pointer;
  background-size: var(--pieceSize);
  background-position: center;
  position: relative;
}

.w-pawn {
  background-image: url(./images/w-pawn.png);
}

.w-rook {
  background-image: url(./images/w-rook.png);
}

.w-knight {
  background-image: url(./images/w-knight.png);
}

.w-bishop {
  background-image: url(./images/w-bishop.png);
}

.w-queen {
  background-image: url(./images/w-queen.png);
}

.w-king {
  background-image: url(./images/w-king.png);
}

.b-pawn {
  background-image: url(./images/b-pawn.png);
}

.b-rook {
  background-image: url(./images/b-rook.png);
}

.b-knight {
  background-image: url(./images/b-knight.png);
}

.b-bishop {
  background-image: url(./images/b-bishop.png);
}

.b-queen {
  background-image: url(./images/b-queen.png);
}

.b-king {
  background-image: url(./images/b-king.png);
}